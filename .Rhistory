# 1 -0.5000 -4.010984e-16
# 2  3.8899 -4.010984e-16
# With type="response", the function returns PROBABILITIES
pmean1 <- predict(logistic.regression, newdata=mgpa.1unit, type="response")
(EAM1 <- pmean[2]-pmean[1])  # 0.061
mgre.1unit <- data.frame(GRE=c(mgre.scale-1, mgre.scale+1), GPA=mgpa.scale)
pmean2 <- predict(logistic.regression, newdata=mgpa.1unit, type="response")
(EAM2 <- pmean2[2]-pmean2[1])  # 0.2980552
mgpa2 <- data.frame(GPA=c(mgpa.scale-1, mgpa+1), GRE=mgre.scale)
mgpa2 <- data.frame(GPA=c(mgpa.scale-1, mgpa+1), GRE=mgre.scale)
mgpa2 <- data.frame(GPA=c(mgpa.scale-1, mgpa.scale+1), GRE=mgre.scale)
#       GPA       GRE
# 1 -0.5000 -4.010984e-16
# 2  3.8899 -4.010984e-16
mgpa2
pmean1 <- predict(logistic.regression, newdata=mgpa2, type="response")
pmean1
(EAM1 <- pmean[2]-pmean[1])  # 0.061
sd(dat.scale$GPA)   # [1] 1
mgre1 <- mean(dat.scale$GRE)     # 0
mgpa2 <- mean(dat.scale$GPA)     # 0
mgre <- mean(dat$GRE)   # [1] 587.7
mgre1              # [1] -4.010984e-16 or 0
mgpa <- mean(dat$GPA)   # [1] 3.3899
mgpa2              # [1] 2.272705e-16 or 0
meanGPA <- data.frame(GPA=c(mgpa2-1, mgpa2+1), GRE=mgre1)
pmean1 <- predict(logistic.regression, newdata=meanGPA, type="response")
(EAM1 <- pmean[2]-pmean[1])  # 0.061
mgre1
meanGPA
pmean1 <- predict(logistic.regression, newdata=meanGPA, type="response")
pmean1
(EAM1 <- pmean[2]-pmean[1])  # 0.061
(EAM1 <- pmean1[2]-pmean1[1])  # 0.061
meanGRE <- data.frame(GRE=c(mgre1-1, mgre1+1), GPA=mgpa2)
meanGRE
pmean2 <- predict(logistic.regression, newdata=meanGRE, type="response")
(EAM1 <- pmean2[2]-pmean2[1])  # 0.121948
meanGRE <- data.frame(GRE=c(mgre1-1, mgre1+1), GPA=mgpa2)
pmean2 <- predict(logistic.regression, newdata=meanGRE, type="response")
(EAM1 <- pmean2[2]-pmean2[1])
sd_GRE <- sd(dat.scale$GRE)
sd_GRE
sd_GPA
sd_GPA <- sd(dat.scale$GPA)
sd_GPA
GPA_deviations_df <- data.frame(mgpa2 - 3*sd_GPA, 2)
GPA_deviations_df
Unique_GPA_proB_df <- data.frame(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA)
Unique_GPA_proB_df
View(Unique_GPA_proB_df)
PROB0 <- 1/(1+EXP(-lodds0))
prob0 <- 1/(1+exp(-lodds0))
prob0
probablity.at.intercept <- Odds/(1-Odds)
probablity.at.intercept
GPA_prob_df <- data.frame(GRE=mgre1, GPA=c(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA))
GPA_prob_df
pmean1
GPA_probabilities <- predict(logistic.regression, newdata=GPA_prob_df, type="response")
GPA_probabilities
GPA_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
GPA_ROw_Titles
tabe(GPA_ROw_Titles, GPA_probabilities)
table(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities
table(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities <- c(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities
View(GPA_prob_df)
GPA_probabilities <- c(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities
rm(list = ls())
# =====================================================
# Module 7 Homework - Logistic Regression
#
# Mike Hankinson
# November 9, 2021
# =====================================================
# Given:
# - Assignment7.csv: Student GRE scores and GPA and a binary column indicating whether they
#   were admitted to a certain university.
# Pre-processing:
# a.	Load in the data.
# b.	GRE and GPA are measure on significantly different scales.
#     To allow us to interpret these variables on the same range, scale both variables using
#     standardization. This means each variable will have a mean of 0 and a standard
#     deviation of 1.
# c.	Set the dependent variable “admit” as a factor variable and perform logistic regression
#     with two predictors: GRE and GPA.
# Questions:
# 7 questions defined and answered throughout the code.
# ******************************************
# Pre-processing
# ******************************************
# a. Load and Plot Data
# ------------------------------------------
# Data of 400 Students
dat <- read.csv("Assignment7.csv")
names(dat)      # [1] "admit" "GRE"   "GPA"
head(dat)
tail(dat)
my.color <- c("red", "forestgreen")[dat$admit+1]
plot(dat$GRE,dat$admit, pch=16, col=my.color)
my.color <- c("red", "forestgreen")[dat$admit+1]
plot(dat$GPA,dat$admit, pch=16, col=my.color)
# b. Scale Both Variables Using Standardization
# ------------------------------------------
# https://stackoverflow.com/questions/8120984/scaling-data-in-r-ignoring-specific-columns
dat.scale <- dat
dat.scale[, -c(1)] <- scale(dat.scale[, -c(1)])
head(dat.scale)
#     admit        GRE        GPA
# 1     0 -1.7980110  0.5783479
# 2     1  0.6258844  0.7360075
# 3     1  1.8378321  1.6031352
# 4     1  0.4527490 -0.5252692
# 5     0 -0.5860633 -1.2084607
# 6     1  1.4915613 -1.0245245
# Verify mean and standard deviations of GRE and GPA post-scaling
sd_GRE <- sd(dat.scale$GRE)   # [1] 1
sd_GPA <- sd(dat.scale$GPA)   # [1] 1
mgre1 <- mean(dat.scale$GRE)     # 0
mgpa2 <- mean(dat.scale$GPA)     # 0
# c. Convert Dependent Variable to Type Factor / Run Logistic Regression Model
# ------------------------------------------
# Since the dependent variable is categorical and not numeric,
# convert it to type factor for logistic regression and subsequent analysis.
Response <- as.factor(dat.scale$admit)
# Levels: 0 1
# Run Logistic Regression Model
logistic.regression <- glm(Response ~ GRE + GPA, family="binomial", data=dat.scale)
summary(logistic.regression)
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -1.2730  -0.8988  -0.7206   1.3013   2.0620
#
# Coefficients:
#           Estimate Std.   Error     z value   Pr(>|z|)
# (Intercept)    -0.8098     0.1120  -7.233 4.74e-13 ***
#   GRE           0.3108     0.1222   2.544   0.0109 *
#   GPA           0.2872     0.1216   2.361   0.0182 *
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 499.98  on 399  degrees of freedom
# Residual deviance: 480.34  on 397  degrees of freedom
# AIC: 486.34
#
# Number of Fisher Scoring iterations: 4
# LR Model Conclusions:
# 1. GRE B0 = 0.311 states for every additional point earned in the GRE test
#   the probability of acceptance to the university increases by that amount.
# 2. GPA B0 = 0.287 states for every additional point added to a student's GPA
#   the probability of acceptance to the university increases by that amount.
# ******************************************
# Questions
# ******************************************
# 1.Provide an interpretation for the intercept coefficient.
#   What does it mean if both predictors are equal to 0?
# ------------------------------------------
#Note:The dependent variable (admit) of the original data set is a probability
#     bound by 0 and 1.  The logistic regression model transforms admit to a
#     continuous variable to match both GPA and GRE via the log of the odds
#     -- or, log of p(admit)/(1-p(admit)) then computes by minimizing the sum of
#     the logistic loss.
# - The intercept coefficient, B0=-0.8098.
# - This is the log odds of acceptance to the university when both predictors = 0.
# - A negative log odds means that the odds of acceptance is less than 0.50
# - Taking e to the log odds presents an easier view of the number and converts to odds
Odds <- exp(logistic.regression$coefficients[1])  # 0.4449691
# Perform Verification
B.coefficients <- logistic.regression$coefficients
# (Intercept)       GRE         GPA
# -0.8097503   0.3108184   0.2872087
lodds0 <- as.numeric(c(B.coefficients[1]+B.coefficients[2]*0+B.coefficients[3]*0))
# [1] -0.8097503, this matches the glm model output for B0 (y-intercept).
prob0 <- 1/(1+exp(-lodds0))
probablity.at.intercept <- Odds/(1-Odds)
# 2a. Assuming an average value for GRE, calculate the effect of a one unit
#     increase around the mean for GPA.
# ------------------------------------------
# Marginal Effect at the Mean (EAM) is a way to calculate the probability
# increase given a one unit increase around the mean of the independent variable.
mgre <- mean(dat$GRE)   # [1] 587.7
mgre1                   # [1] -4.010984e-16 or 0
mgpa <- mean(dat$GPA)   # [1] 3.3899
mgpa2                   # [1] 2.272705e-16 or 0
meanGPA <- data.frame(GPA=c(mgpa2-1, mgpa2+1), GRE=mgre1)
# With type="response", the function returns PROBABILITIES
pmean1 <- predict(logistic.regression, newdata=meanGPA, type="response")
(EAM1 <- pmean1[2]-pmean1[1])
# Conclusion:
# 0.121948 is the increase in probability of admission, maintaining a constant average GRE,
# given a one unit increase in GPA.
# 2b. Assuming an average value for GPA, calculate the effect of a one unit
#     increase around the mean for GRE.
# ------------------------------------------
meanGRE <- data.frame(GRE=c(mgre1-1, mgre1+1), GPA=mgpa2)
pmean2 <- predict(logistic.regression, newdata=meanGRE, type="response")
(EAM1 <- pmean2[2]-pmean2[1])
# Conclusion:
# 0.1318859 is the increase in probability of admission, maintaining a constant average GPA,
# given a one unit increase in GRE score.
# 3a. With an average value for GRE, calculate the probability of being admitted
#     under the following conditions for GPA: 3 SD below mean, 2.5 SD below mean,
#     2 SD below mean, 1.5 SD below mean, 1 SD below mean, 0.5 SD below mean, Mean score,
#     0.5 SD above mean, 1 SD above mean, 1.5 SD above mean, 2 SD above mean.
#     What is the average marginal effect?
# ------------------------------------------
GPA_prob_df <- data.frame(GRE=mgre1, GPA=c(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA))
GPA_probabilities <- predict(logistic.regression, newdata=GPA_prob_df, type="response")
GPA_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
GPA_probabilities <- cbind(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities
View(GPA_probabilities)
table(GPA_probabilities)
GPA_probabilities
GPA_prob_df <- data.frame(GRE=mgre1, GPA=c(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA))
GPA_probabilities <- predict(logistic.regression, newdata=GPA_prob_df, type="response")
GPA_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
# Conclusion: The probability of being admitted increases with increasing positive
# sd from the mean (with constant GRE at the mean):
GPA_probabilities_summary <- cbind(GPA_ROw_Titles, GPA_probabilities)
GPA_prob_df <- data.frame(GRE=mgre1, GPA=c(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA))
GPA_probabilities <- predict(logistic.regression, newdata=GPA_prob_df, type="response")
GPA_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
GPA_prob_df <- data.frame(GRE=mgre1, GPA=c(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA))
GPA_probabilities <- predict(logistic.regression, newdata=GPA_prob_df, type="response")
GPA_probabilities
GPA_ROw_Titles
GPA_probabilities_summary <- cbind(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities_summary
AME <- mean(all.effects)
all.effects <- diff(GPA_probabilities)
AME <- mean(all.effects)
AME
GRE_prob_df <- data.frame(GPA=mgpa2, GRE=c(mgre1-3*sd_GRE, mgre1-2.5*sd_GRE, mgre1-2*sd_GRE, mgre1-1.5*sd_GRE,
mgre1-1*sd_GRE, mgre1-0.5*sd_GRE, mgre1-0*sd_GRE, mgre1+0.5*sd_GRE,
mgre1+1*sd_GRE, mgre1+1.5*sd_GRE, mgre1+2*sd_GRE))
GRE_probabilities <- predict(logistic.regression, newdata=GRE_prob_df, type="response")
GRE_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
# Conclusion: The probability of being admitted increases with increasing positive
# sd from the mean (with constant GRE at the mean):
GPA_probabilities_summary <- cbind(GRE_ROw_Titles, GRE_probabilities)
all.effects2 <- diff(GRE_probabilities)
AME2 <- mean(all.effects2)
GPA_probabilities_summary
rm(list = ls())
# =====================================================
# Module 7 Homework - Logistic Regression
#
# Mike Hankinson
# November 9, 2021
# =====================================================
# Given:
# - Assignment7.csv: Student GRE scores and GPA and a binary column indicating whether they
#   were admitted to a certain university.
# Pre-processing:
# a.	Load in the data.
# b.	GRE and GPA are measure on significantly different scales.
#     To allow us to interpret these variables on the same range, scale both variables using
#     standardization. This means each variable will have a mean of 0 and a standard
#     deviation of 1.
# c.	Set the dependent variable “admit” as a factor variable and perform logistic regression
#     with two predictors: GRE and GPA.
# Questions:
# 7 questions defined and answered throughout the code.
# ******************************************
# Pre-processing
# ******************************************
# a. Load and Plot Data
# ------------------------------------------
# Data of 400 Students
dat <- read.csv("Assignment7.csv")
names(dat)      # [1] "admit" "GRE"   "GPA"
head(dat)
tail(dat)
my.color <- c("red", "forestgreen")[dat$admit+1]
plot(dat$GRE,dat$admit, pch=16, col=my.color)
my.color <- c("red", "forestgreen")[dat$admit+1]
plot(dat$GPA,dat$admit, pch=16, col=my.color)
# b. Scale Both Variables Using Standardization
# ------------------------------------------
# https://stackoverflow.com/questions/8120984/scaling-data-in-r-ignoring-specific-columns
dat.scale <- dat
dat.scale[, -c(1)] <- scale(dat.scale[, -c(1)])
head(dat.scale)
#     admit        GRE        GPA
# 1     0 -1.7980110  0.5783479
# 2     1  0.6258844  0.7360075
# 3     1  1.8378321  1.6031352
# 4     1  0.4527490 -0.5252692
# 5     0 -0.5860633 -1.2084607
# 6     1  1.4915613 -1.0245245
# Verify mean and standard deviations of GRE and GPA post-scaling
sd_GRE <- sd(dat.scale$GRE)   # [1] 1
sd_GPA <- sd(dat.scale$GPA)   # [1] 1
mgre1 <- mean(dat.scale$GRE)     # 0
mgpa2 <- mean(dat.scale$GPA)     # 0
# c. Convert Dependent Variable to Type Factor / Run Logistic Regression Model
# ------------------------------------------
# Since the dependent variable is categorical and not numeric,
# convert it to type factor for logistic regression and subsequent analysis.
Response <- as.factor(dat.scale$admit)
# Levels: 0 1
# Run Logistic Regression Model
logistic.regression <- glm(Response ~ GRE + GPA, family="binomial", data=dat.scale)
summary(logistic.regression)
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -1.2730  -0.8988  -0.7206   1.3013   2.0620
#
# Coefficients:
#           Estimate Std.   Error     z value   Pr(>|z|)
# (Intercept)    -0.8098     0.1120  -7.233 4.74e-13 ***
#   GRE           0.3108     0.1222   2.544   0.0109 *
#   GPA           0.2872     0.1216   2.361   0.0182 *
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 499.98  on 399  degrees of freedom
# Residual deviance: 480.34  on 397  degrees of freedom
# AIC: 486.34
#
# Number of Fisher Scoring iterations: 4
# LR Model Conclusions:
# 1. GRE B0 = 0.311 states for every additional point earned in the GRE test
#   the probability of acceptance to the university increases by that amount.
# 2. GPA B0 = 0.287 states for every additional point added to a student's GPA
#   the probability of acceptance to the university increases by that amount.
# ******************************************
# Questions
# ******************************************
# 1.Provide an interpretation for the intercept coefficient.
#   What does it mean if both predictors are equal to 0?
# ------------------------------------------
#Note:The dependent variable (admit) of the original data set is a probability
#     bound by 0 and 1.  The logistic regression model transforms admit to a
#     continuous variable to match both GPA and GRE via the log of the odds
#     -- or, log of p(admit)/(1-p(admit)) then computes by minimizing the sum of
#     the logistic loss.
# - The intercept coefficient, B0=-0.8098.
# - This is the log odds of acceptance to the university when both predictors = 0.
# - A negative log odds means that the odds of acceptance is less than 0.50
# - Taking e to the log odds presents an easier view of the number and converts to odds
Odds <- exp(logistic.regression$coefficients[1])  # 0.4449691
# Perform Verification
B.coefficients <- logistic.regression$coefficients
# (Intercept)       GRE         GPA
# -0.8097503   0.3108184   0.2872087
lodds0 <- as.numeric(c(B.coefficients[1]+B.coefficients[2]*0+B.coefficients[3]*0))
# [1] -0.8097503, this matches the glm model output for B0 (y-intercept).
prob0 <- 1/(1+exp(-lodds0))
probablity.at.intercept <- Odds/(1-Odds)
# 2a. Assuming an average value for GRE, calculate the effect of a one unit
#     increase around the mean for GPA.
# ------------------------------------------
# Marginal Effect at the Mean (EAM) is a way to calculate the probability
# increase given a one unit increase around the mean of the independent variable.
mgre <- mean(dat$GRE)   # [1] 587.7
mgre1                   # [1] -4.010984e-16 or 0
mgpa <- mean(dat$GPA)   # [1] 3.3899
mgpa2                   # [1] 2.272705e-16 or 0
meanGPA <- data.frame(GPA=c(mgpa2-1, mgpa2+1), GRE=mgre1)
# With type="response", the function returns PROBABILITIES
pmean1 <- predict(logistic.regression, newdata=meanGPA, type="response")
(EAM1 <- pmean1[2]-pmean1[1])
# Conclusion:
# 0.121948 is the increase in probability of admission, maintaining a constant average GRE,
# given a one unit increase in GPA.
# 2b. Assuming an average value for GPA, calculate the effect of a one unit
#     increase around the mean for GRE.
# ------------------------------------------
meanGRE <- data.frame(GRE=c(mgre1-1, mgre1+1), GPA=mgpa2)
pmean2 <- predict(logistic.regression, newdata=meanGRE, type="response")
(EAM1 <- pmean2[2]-pmean2[1])
# Conclusion:
# 0.1318859 is the increase in probability of admission, maintaining a constant average GPA,
# given a one unit increase in GRE score.
# 3a. With an average value for GRE, calculate the probability of being admitted
#     under the following conditions for GPA: 3 SD below mean, 2.5 SD below mean,
#     2 SD below mean, 1.5 SD below mean, 1 SD below mean, 0.5 SD below mean, Mean score,
#     0.5 SD above mean, 1 SD above mean, 1.5 SD above mean, 2 SD above mean.
#     What is the average marginal effect?
# ------------------------------------------
GPA_prob_df <- data.frame(GRE=mgre1, GPA=c(mgpa2-3*sd_GPA, mgpa2-2.5*sd_GPA, mgpa2-2*sd_GPA, mgpa2-1.5*sd_GPA,
mgpa2-1*sd_GPA, mgpa2-0.5*sd_GPA, mgpa2-0*sd_GPA, mgpa2+0.5*sd_GPA,
mgpa2+1*sd_GPA, mgpa2+1.5*sd_GPA, mgpa2+2*sd_GPA))
GPA_probabilities <- predict(logistic.regression, newdata=GPA_prob_df, type="response")
GPA_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
# Conclusion: The probability of being admitted increases with increasing positive
# sd from the mean (with constant GRE at the mean):
GPA_probabilities_summary <- cbind(GPA_ROw_Titles, GPA_probabilities)
# GPA_ROw_Titles GPA_probabilities
# 1  "-3SD"         "0.158240733769537"
# 2  "-2.5SD"       "0.178319874668119"
# 3  "-2SD"         "0.200340463497387"
# 4  "-1.5SD"       "0.224337924193125"
# 5  "-1SD"         "0.250310104606916"
# 6  "-0.5 SD"      "0.278210663318401"
# 7  "SD"           "0.307943699230024"
# 8  "+0.5SD"       "0.339360358993962"
# 9  "+1SD"         "0.372258114944254"
# 10 "+1.5SD"       "0.40638324989128"
# 11 "+2SD"         "0.441436812674739"
all.effects <- diff(GPA_probabilities)
AME <- mean(all.effects)
# Conclusion: The marginal effect of GPA = 0.02831961, keeping GRE constant at its mean.
# 3b. With an average value for GPA, calculate the probability of being admitting under
#     the following conditions for GRE: 3 SD below mean, 2.5 SD below mean, 2 SD below mean,
#     1.5 SD below mean, 1 SD below mean, 0.5 SD below mean, Mean score, 0.5 SD above mean,
#     1 SD above mean, 1.5 SD above mean, 2 SD above mean.
#     What is the average marginal effect?
# ------------------------------------------
GRE_prob_df <- data.frame(GPA=mgpa2, GRE=c(mgre1-3*sd_GRE, mgre1-2.5*sd_GRE, mgre1-2*sd_GRE, mgre1-1.5*sd_GRE,
mgre1-1*sd_GRE, mgre1-0.5*sd_GRE, mgre1-0*sd_GRE, mgre1+0.5*sd_GRE,
mgre1+1*sd_GRE, mgre1+1.5*sd_GRE, mgre1+2*sd_GRE))
GRE_probabilities <- predict(logistic.regression, newdata=GRE_prob_df, type="response")
GRE_ROw_Titles <- c("-3SD", "-2.5SD", "-2SD", "-1.5SD", "-1SD", "-0.5 SD", "SD", "+0.5SD", "+1SD", "+1.5SD",
"+2SD")
# Conclusion: The probability of being admitted increases with increasing positive
# sd from the mean (with constant GRE at the mean):
GRE_probabilities_summary <- cbind(GRE_ROw_Titles, GRE_probabilities)
all.effects2 <- diff(GRE_probabilities)
AME2 <- mean(all.effects2)
# Conclusion: The marginal effect of GPA = 0.02831961, keeping GRE constant at its mean.
GRE_probabilities_summary
AME2
AME
AME2
GPA.prob4 = mgpa2-0.5*sd_GPA
GPA.prob4
p <- 0.75
GPA.prob4 = mgpa2-0.5*sd_GPA  [1] -0.5
log.odds4 = ln(p/(1-p))
log.odds4 = log(p/(1-p))
log.odds4
B.coefficients[3]
X1 <- (log.odds4-B.coefficients[3]*GPA.prob4-B.coefficients[1])/B.coefficients[2]
X1
max(dat.scale$GPA)
GRE_SD_above_mean <- (X1 - mgre1)/sd_GRE
GRE_SD_above_mean
sd_GRE
mgre1
predictions <- log.reg$fitted.values
predictions[predictions>=0.5] <- 1
predictions[predictions<0.5] <- 0
predictions <- as.factor(predictions)
predictions
predictions <- logistic.regression$fitted.values
predictions[predictions>=0.5] <- 1
predictions[predictions<0.5] <- 0
predictions <- as.factor(predictions)
predictions
table(predictions, dat$admit)
library(caret)
confusionMatrix(predictions, Response, mode="prec_recall", positive = "1")
library(AUC)
r <- roc(predictions, Response) # Remember: Since the dependent variable is
# categorical and not numeric,
# converted it to type factor above for
# logistic regression and subsequent analysis by
# Response <- as.factor(dat$Pass)
# !!!!!!!!!!!!!!!!!!!!!!  Area under the curve not computed. !!!!!!!!!!!!!!!!!
plot(roc(predictions, Response))
auc(r3)       # [1] 0.8431953
auc(r)
GRE&GPA.Value <- (logistic.regression$coefficients[1]*-1)/(logistic.regression$coefficients[2]+
logistic.regression$coefficients[3])
GRE.GPA.Value <- (logistic.regression$coefficients[1]*-1)/(logistic.regression$coefficients[2]+
logistic.regression$coefficients[3])
GRE.GPA.Value
log.odds5 <- logistic.regression$coefficients[1]+logistic.regression$coefficients[2]*GRE.GPA.Value+
logistic.regression$coefficients[3]*GRE.GPA.Value
log.odds5
log(0)
log(-5.551115e-17)
log(log.odds5)
e(-5.551115e-17)
exp(log.odds5)
p5 <- exp(log.odds5)/2
p5
rm(list = ls())
source('C:/Users/mmhan_uricwmy/!Mike_Sync/!U_Chicago_Statistics/Module_7_Logistic_Regression/Homework/Module7_Homework.R', echo=TRUE)
GPA_probabilities_summary <- cbind(GPA_ROw_Titles, GPA_probabilities)
GPA_probabilities_summary
GPA_probabilities
GPA_probabilities_summary
